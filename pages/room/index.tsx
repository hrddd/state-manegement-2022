import { Inter } from '@next/font/google'

import { GetServerSideProps, InferGetServerSidePropsType } from 'next'
import Head from 'next/head'
import { z } from 'zod'
import Room from '../../components/templates/Room'
const inter = Inter({ subsets: ['latin'] })

type Props = InferGetServerSidePropsType<typeof getServerSideProps>

export default function RoomPage({ roomId }: Props) {
  return (
    <>
      <Head>
        <title>Room</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Room roomId={roomId} />
    </>
  )
}

const propsScheme = z.object({
  roomId: z
    .string()
    .refine((v) => {
      return !isNaN(parseInt(v, 10))
    }, 'roomId must be number')
    .transform((themeId) => {
      return parseInt(themeId, 10)
    }),
})

type PropSchemeOutput = z.infer<typeof propsScheme>

export const getServerSideProps: GetServerSideProps<PropSchemeOutput> = async ({ query }) => {
  const props = propsScheme.parse({
    roomId: query.roomId,
  })

  return {
    props,
  }
}
